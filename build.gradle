/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'io.spinnaker.project' version "$spinnakerGradleVersion" apply false
  id "org.jetbrains.kotlin.jvm" version "$kotlinVersion" apply false
  id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion" apply false
}

allprojects {
  apply plugin: 'io.spinnaker.project'
  //apply plugin: 'io.spinnaker.kork'

  repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
  }
  tasks.withType( Copy).all {
    duplicatesStrategy 'exclude'
  }
}

subprojects { project ->
  group = "io.spinnaker.front50"

  if ([korkVersion, fiatVersion].find { it.endsWith("-SNAPSHOT") }) {
    repositories {
      mavenLocal()
      gradlePluginPortal()
       maven{
        url "https://nexus.opsmx.net/repository/maven-snapshots/"
      }
    }
  }

  if (name != "front50-bom") {
    apply plugin: 'java-library'
    apply plugin: 'groovy'

    tasks.compileGroovy.enabled = false

    test {
      testLogging {
        exceptionFormat = 'full'
      }
      useJUnitPlatform()
    }

    tasks.withType(JavaExec) {
      if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8180'
      }
    }

    dependencies {
      implementation(enforcedPlatform("io.spinnaker.kork:kork-bom:$korkVersion")){
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
      }
      annotationProcessor(platform("io.spinnaker.kork:kork-bom:$korkVersion")){
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
      }
      annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
      testAnnotationProcessor(platform("io.spinnaker.kork:kork-bom:$korkVersion")){
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
      }

      implementation("net.logstash.logback:logstash-logback-encoder:4.11")

      compileOnly("org.projectlombok:lombok")
      annotationProcessor("org.projectlombok:lombok")
      testAnnotationProcessor("org.projectlombok:lombok")
      implementation "com.amazonaws:aws-java-sdk-bom:1.12.411"
      implementation "com.amazonaws:aws-java-sdk-sns:1.12.411"
      implementation "com.amazonaws:aws-java-sdk-sqs:1.12.411"
      //testImplementation("org.codehaus.groovy:groovy-all:3.0.16")
      implementation "org.apache.groovy:groovy:4.0.9"
      implementation("com.google.oauth-client:google-oauth-client:1.34.1")
      implementation("com.jcraft:jsch:0.1.55")
      implementation("org.jboss.resteasy:resteasy-client:6.2.3.Final")
      implementation("org.jboss.resteasy:resteasy-jaxrs:4.0.0.Beta5")

      testImplementation("org.codehaus.groovy:groovy")
      testImplementation("org.spockframework:spock-core")
      testImplementation("org.springframework.boot:spring-boot-starter-test")
      api("org.spockframework:spock-bom:2.4-M1-groovy-4.0")
      testImplementation("org.spockframework:spock-bom:2.4-M1-groovy-4.0")
      testImplementation("org.spockframework:spock-spring")
      testImplementation("org.springframework:spring-test")
      testImplementation("org.hamcrest:hamcrest-core")
      testRuntimeOnly("cglib:cglib-nodep:3.3.0")
      testRuntimeOnly("org.junit.vintage:junit-vintage-engine")
      testRuntimeOnly("org.objenesis:objenesis")
    }
    // Keep this constraint till all other components get bumped up to this version and subsequently updated in the kork.
    configurations.all {
      resolutionStrategy.force 'com.google.apis:google-api-services-storage:v1-rev20200326-1.30.9'
      resolutionStrategy.force 'com.google.auth:google-auth-library-oauth2-http:0.20.0'
      // TODO(plumpy): remove version once added to kork
      resolutionStrategy.force 'com.google.cloud:google-cloud-storage:1.108.0'
    }
  }
}

defaultTasks ':front50-web:run'
